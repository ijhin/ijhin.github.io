<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[单一入口文件index.php的几点分析]]></title>
      <url>http://ijhin.com/php/20160707/single-entry.html</url>
      <content type="html"><![CDATA[<h3 id="PHP应用入口模式"><a href="#PHP应用入口模式" class="headerlink" title="PHP应用入口模式"></a>PHP应用入口模式</h3><p>php单一入口模式是现在非常流行的大型web应用开发模式，一些知名框架都采用这种，比如laravel，Yii2，zendframework，CI，thinkPHP等，观察这些框架的URL，基本上都是<code>http://xxx.com/index.php?m=xxx&amp;c=xxx&amp;a=xxx</code>，。当然还有多入口的框架，比如帝国CMS，ECShop等，多入口框架的URL，多为<code>http://xxx.com/index.php</code>、<code>http://xxx.com/login.php</code>路由不经过入口文件分发。</p>
<h3 id="单一入口的优点"><a href="#单一入口的优点" class="headerlink" title="单一入口的优点"></a>单一入口的优点</h3><p>单一入口通常是指一个项目或者应用具有一个统一（但并不一定是唯一）的入口文件，也就是说项目的所有功能操作都是通过这个入口文件进行的，并且往往入口文件是第一步被执行的。 </p>
<p>单一入口的好处是项目整体比较规范，因为同一个入口，往往其不同操作之间具有相同的规则。另外一个方面就是单一入口带来的好处是控制较为灵活，因为拦截方便了，类似如一些权限控制、用户登录方面的判断和操作可以统一处理了。</p>
<h3 id="单一入口的缺点"><a href="#单一入口的缺点" class="headerlink" title="单一入口的缺点"></a>单一入口的缺点</h3><p>单一入口的应用程序的URL是由很多参数组成，比如<code>模型</code>、<code>控制器</code>、<code>方法</code>,当然这些都可以通过<code>url重写</code>改变，变得美美哒！</p>
<h3 id="单一入口文件的简单实现"><a href="#单一入口文件的简单实现" class="headerlink" title="单一入口文件的简单实现"></a>单一入口文件的简单实现</h3><p>新建<code>index.php</code>,代码如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">'ijhin'</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">//url中取出action参数，如果没有提供action参数，就设置一个默认的'index'作为参数</span></span><br><span class="line">$action = <span class="keyword">isset</span>($_REQUEST[<span class="string">'action'</span>]) == <span class="string">''</span> ? <span class="string">'index'</span> : $_REQUEST[<span class="string">'action'</span>];</span><br><span class="line"><span class="comment">//根据$action参数调用不同的代码文件，从而满足单一入口实现对应的不同的功能</span></span><br><span class="line"><span class="keyword">if</span>($action !== <span class="string">'index'</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">'./'</span>.$action.<span class="string">'.php'</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//避免死循环</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'This is index.php'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>新建<code>test.php</code>,代码如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//防止直接访问test.php</span></span><br><span class="line"><span class="keyword">if</span> (!defined(<span class="string">'ijhin'</span>)) <span class="keyword">die</span>(<span class="string">'Access Denied'</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'success'</span>;</span><br></pre></td></tr></table></figure>
<p>##效果</p>
<p>直接访问<code>index.php</code>，输出如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is index.php</span><br></pre></td></tr></table></figure>
<p>直接访问<code>index.php</code>，输出如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Access Denied</span><br></pre></td></tr></table></figure>
<p>单一入口文件的正确访问姿势是这样:<code>index.php?action=test</code>,输出如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">success</span><br></pre></td></tr></table></figure>
<p>这是因为所有的·<code>http</code>请求都是由<code>index.php</code>接收并转发到其他路由上去，所以，我们可以在<code>index.php</code>中可以做很多的防护和控制工作，比如安全性检测，特殊字符过滤，记录日志，访问控制等，都可以集中处理，可以减轻我们的代码维护工作。</p>
<h3 id="ThinkPHP单一入口实现"><a href="#ThinkPHP单一入口实现" class="headerlink" title="ThinkPHP单一入口实现"></a>ThinkPHP单一入口实现</h3><p>话不多说，代码奉上,请在thinkPHP v3.1中，新建应用后的的入口文件中实现：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取控制器名</span></span><br><span class="line">$control = <span class="keyword">isset</span>($_REQUEST[<span class="string">'m'</span>])? $_REQUEST[<span class="string">'m'</span>] : <span class="string">'Index'</span>;</span><br><span class="line"><span class="comment">//获取方法名</span></span><br><span class="line">$action = <span class="keyword">isset</span>($_REQUEST[<span class="string">'a'</span>])? $_REQUEST[<span class="string">'a'</span>] : <span class="string">'Index'</span>;</span><br><span class="line"></span><br><span class="line">$obj = <span class="keyword">new</span> $control();</span><br><span class="line">$obj-&gt;action()</span><br><span class="line"></span><br><span class="line"><span class="comment">//控制器类代码</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'This is Index index'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Thies is Index handle'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://ijhin.com/essay/20160620/hello-world.html</url>
      <content type="html"><![CDATA[<p>  作为一枚程序员，配置好新玩具，如果不说一句“Hello World”，总感觉少点什么！好吧作为纪念，我就郑重的写下这句话：</p>
<h2 id="Hello-World-！"><a href="#Hello-World-！" class="headerlink" title="Hello World ！"></a>Hello World ！</h2>]]></content>
    </entry>
    
  
  
</search>
